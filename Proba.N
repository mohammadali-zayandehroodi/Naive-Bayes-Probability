% NAIVE BAYES CLASSIFIER Probability
clear
tic
disp('--- start ---')
distr='normal';
distr='kernel';
% read data
# Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
gds = pd.read_csv(r"C:\Users\Sana\Desktop\New folder (3)\glass.csv") gds.head()
feature_cols=['Ba','Fe','RI','Na','Mg','Al','Si','K','Ca']
X=gds[feature_cols]
Y=gds.Type
# Splitting the dataset into the Training set and Test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.20, random_state = 0)
# Feature Scaling
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)
# Training the Naive Bayes model on the Training set
from sklearn.naive_bayes import GaussianNB
classifier = GaussianNB()
classifier.fit(X_train, y_train)
# Predicting the Test set results
y_pred = classifier.predict(X_test)
y_pred1 = classifier.predict_proba(X_test)
 print(y_pred1 .shape)
 y_pred1
 from pandas import DataFrame
df = DataFrame(y_pred1)
df.to_excel('C:/Users/Pars/Desktop/mat/New folder/EHTEMAL.xlsx')
# Making the Confusion Matrix
from sklearn.metrics import confusion_matrix, accuracy_score
ac = accuracy_score(y_test,y_pred)
cm = confusion_matrix(y_test, y_pred)
import seaborn as sn
sn.heatmap(cm)




